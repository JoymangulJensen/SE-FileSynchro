/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inteface;

import ClassPartager.UnClient;
import clients.ConnexNClient;
import clients.Connexion;
import java.awt.Color;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.UIManager;

/**
 *
 * @author Selwyn
 */
public class MainGUI extends javax.swing.JFrame {

    public static Socket socket = null;
    public static Thread t1;
    public static UnClient client;
    public boolean cilentaccepter = false;
    private ObjectOutputStream oos;
    private ObjectInputStream ois;
    public JFileChooser fileChooser;
    private String ip;
    private int port;
    private boolean ok;
    private Erreur errdiag;

    public MainGUI() throws InterruptedException {
        initComponents();
        //Changement de theme 
        UIManager.put("nimbusBase", new Color(11, 161, 224));
        UIManager.put("nimbusBlueGrey", new Color(11, 161, 224));
        UIManager.put("control", new Color(63, 62, 62));
        UIManager.put("nimbusOrange", new Color(2, 199, 25));
        
        do {    
            ClientCon diag = new ClientCon(this, true); //lancement du JDialoge pour choisir l'IP et le port
            diag.setVisible(true);
            if (diag.ok) {
                ip = diag.IP;   //recupere l'ip
                port = diag.PORT;   //recupere le port
                ok = true;
            }
            try {
                //verifier si le client peut se connecter avec l'ip et le port entrer
                socket = new Socket(ip, port);
                this.oos = new ObjectOutputStream(MainGUI.socket.getOutputStream());
                this.ois = new ObjectInputStream(MainGUI.socket.getInputStream());
                oos.writeInt(3);
                oos.flush();
                socket.close();
            } catch (IOException ex) {
                //si le client ne peut â se connecter alors il y un message d'erreur
                ok = false;
                //lancement du message d'erreur
                errdiag = new Erreur(this, true, "<html>Impossible de ce<br>connecter au serveur</html>");
                errdiag.setVisible(true);
            }
        } while (!ok);  //boucle tant que le client ne rentre pas le bon IP et port
        do {
            try {
                socket = new Socket(ip, port);  //connection avec l'IP et le port entrée
                this.oos = new ObjectOutputStream(MainGUI.socket.getOutputStream());
                this.ois = new ObjectInputStream(MainGUI.socket.getInputStream());
            } catch (IOException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

            //lancement du JDialog pour le client rentre son identifiant ou créer un nouveau client
            Bienvenue diag = new Bienvenue(this, true);
            diag.setVisible(true);
            if (diag.ok == 1) {
                t1 = new Thread(new Connexion(ois, oos, this, diag.login, diag.motDePass));
                t1.start();
                t1.join();
            } else if (diag.ok == 2) {
                if (diag.ok == 2) {
                    t1 = new Thread(new ConnexNClient(ois, oos, diag.client, this));
                    t1.start();
                    t1.join();
                }
            }
            if (!this.cilentaccepter) {
                //lancement du message d'erreur
                errdiag = new Erreur(this, true, "<html>Impossible de ce<br>connecter au serveur<br>Veuillez ressayer</html>");
                errdiag.setVisible(true);
            }

        } while (!this.cilentaccepter); //boucke tant que le client ne se connect pas au serveur

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        quota = new javax.swing.JProgressBar();
        dossier = new javax.swing.JLabel();
        courriel = new javax.swing.JLabel();
        nom = new javax.swing.JLabel();
        identifiant1 = new javax.swing.JLabel();
        deconnex = new javax.swing.JLabel();
        etat = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        envoie = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        reception = new javax.swing.JTextArea();
        background = new javax.swing.JLabel();

        jMenuItem2.setText("jMenuItem2");

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(63, 62, 62));
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        quota.setBackground(new java.awt.Color(61, 83, 240));
        quota.setStringPainted(true);
        getContentPane().add(quota, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 450, 450, 40));

        dossier.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        dossier.setForeground(new java.awt.Color(11, 161, 224));
        getContentPane().add(dossier, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, 350, 50));

        courriel.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        courriel.setForeground(new java.awt.Color(11, 161, 224));
        getContentPane().add(courriel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 350, 50));

        nom.setFont(new java.awt.Font("Segoe UI Black", 1, 30)); // NOI18N
        nom.setForeground(new java.awt.Color(11, 161, 224));
        getContentPane().add(nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 400, 70));

        identifiant1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        identifiant1.setForeground(new java.awt.Color(11, 161, 224));
        getContentPane().add(identifiant1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 250, 50));

        deconnex.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/deconnexBut.png"))); // NOI18N
        deconnex.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deconnexMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deconnexMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deconnexMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deconnexMousePressed(evt);
            }
        });
        getContentPane().add(deconnex, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        etat.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        etat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(etat, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 136, 40));

        envoie.setBackground(new java.awt.Color(52, 84, 94));
        envoie.setColumns(20);
        envoie.setFont(new java.awt.Font("Segoe UI Semilight", 1, 14)); // NOI18N
        envoie.setForeground(new java.awt.Color(255, 255, 255));
        envoie.setRows(5);
        envoie.setBorder(null);
        jScrollPane1.setViewportView(envoie);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 230, 130));

        reception.setBackground(new java.awt.Color(52, 84, 94));
        reception.setColumns(20);
        reception.setFont(new java.awt.Font("Segoe UI Semilight", 1, 14)); // NOI18N
        reception.setForeground(new java.awt.Color(255, 255, 255));
        reception.setRows(5);
        reception.setBorder(null);
        jScrollPane2.setViewportView(reception);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 290, 225, 130));

        background.setBackground(new java.awt.Color(63, 62, 62));
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ClientGUI.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    }//GEN-LAST:event_formWindowActivated

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowStateChanged

    private void deconnexMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deconnexMouseEntered
        deconnex.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/deconnexButHover.png")));
    }//GEN-LAST:event_deconnexMouseEntered

    private void deconnexMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deconnexMouseExited
        deconnex.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/deconnexBut.png")));
    }//GEN-LAST:event_deconnexMouseExited

    private void deconnexMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deconnexMousePressed
        deconnex.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/deconnexButClick.png")));
    }//GEN-LAST:event_deconnexMousePressed

    /**
     * en appuyant sur le bouton deconnexion pour fermer le client
     */
    private void deconnexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deconnexMouseClicked
        try {
            oos.writeUTF("Deconnecté");
            oos.flush();
            socket.close();
        } catch (IOException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_deconnexMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new MainGUI().setVisible(true);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel background;
    public javax.swing.JLabel courriel;
    private javax.swing.JLabel deconnex;
    public javax.swing.JLabel dossier;
    public javax.swing.JTextArea envoie;
    public javax.swing.JLabel etat;
    public javax.swing.JLabel identifiant1;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JLabel nom;
    public javax.swing.JProgressBar quota;
    public javax.swing.JTextArea reception;
    // End of variables declaration//GEN-END:variables
}
